2024-01-14 05:17:42 index.ts[info]: initializeRoutes() 
2024-01-14 05:17:42 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:18:38 index.ts[info]: controller-admin-timingSlots.getTimeSlots() 
2024-01-14 05:18:38 index.ts[debug]: controller-admin-timingSlots.getTimeSlots() Object  
2024-01-14 05:18:38 index.ts[info]: services.timeSlots.getTimeSlots() ==>  
2024-01-14 05:18:38 index.ts[info]: data_stores_mysql_lib_time_slots.getTimeSlots() 
2024-01-14 05:18:46 index.ts[info]: helper.response_builder.responseBuilder() 
2024-01-14 05:19:46 index.ts[info]: controller.admin.getSingleBookedSlots() 
2024-01-14 05:19:46 index.ts[debug]: controller.admin.getSingleBookedSlots() Object = {} 
2024-01-14 05:19:46 index.ts[info]: services.admin.theater.getSingleBookedSlots() ==>  
2024-01-14 05:19:46 index.ts[info]: data_stores_mysql_lib_user_Theater.getSingleBookedSlots() 
2024-01-14 05:19:48 index.ts[info]: helper.response_builder.responseBuilder() 
2024-01-14 05:20:03 index.ts[info]: controller.admin.getSingleBookedSlots() 
2024-01-14 05:20:03 index.ts[debug]: controller.admin.getSingleBookedSlots() Object = {} 
2024-01-14 05:20:03 index.ts[info]: services.admin.theater.getSingleBookedSlots() ==>  
2024-01-14 05:20:03 index.ts[info]: data_stores_mysql_lib_user_Theater.getSingleBookedSlots() 
2024-01-14 05:20:05 index.ts[info]: helper.response_builder.responseBuilder() 
2024-01-14 05:20:17 index.ts[info]: controller.admin.getSingleBookedSlots() 
2024-01-14 05:20:17 index.ts[debug]: controller.admin.getSingleBookedSlots() Object = {} 
2024-01-14 05:20:17 index.ts[info]: services.admin.theater.getSingleBookedSlots() ==>  
2024-01-14 05:20:17 index.ts[info]: data_stores_mysql_lib_user_Theater.getSingleBookedSlots() 
2024-01-14 05:20:19 index.ts[info]: helper.response_builder.responseBuilder() 
2024-01-14 05:21:21 index.ts[info]: initializeRoutes() 
2024-01-14 05:21:21 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:21:24 index.ts[info]: controller.admin.getSingleBookedSlots() 
2024-01-14 05:21:24 index.ts[debug]: controller.admin.getSingleBookedSlots() Object = {} 
2024-01-14 05:21:24 index.ts[info]: services.admin.theater.getSingleBookedSlots() ==>  
2024-01-14 05:21:24 index.ts[info]: data_stores_mysql_lib_user_Theater.getSingleBookedSlots() 
2024-01-14 05:21:33 index.ts[error]: ERROR in executeQuery() => SequelizeDatabaseError: column "timingslotid" does not exist 
2024-01-14 05:21:33 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user_Theater.getSingleBookedSlots() column "timingslotid" does not exist Error
    at Query.run (D:\projets\projects\Backend\node_modules\sequelize\src\dialects\postgres\query.js:76:25)
    at D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:650:28
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-01-14 05:21:33 index.ts[error]: ERROR occurred in services.admin.theater.getSingleBookedSlots column "timingslotid" does not exist Error
    at Query.run (D:\projets\projects\Backend\node_modules\sequelize\src\dialects\postgres\query.js:76:25)
    at D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:650:28
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-01-14 05:21:33 index.ts[info]: helper.response_builder.responseBuilder() 
2024-01-14 05:22:59 index.ts[info]: initializeRoutes() 
2024-01-14 05:22:59 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:23:10 index.ts[info]: controller.admin.getSingleBookedSlots() 
2024-01-14 05:23:10 index.ts[debug]: controller.admin.getSingleBookedSlots() Object = {} 
2024-01-14 05:23:10 index.ts[info]: services.admin.theater.getSingleBookedSlots() ==>  
2024-01-14 05:23:10 index.ts[info]: data_stores_mysql_lib_user_Theater.getSingleBookedSlots() 
2024-01-14 05:23:19 index.ts[error]: ERROR in executeQuery() => SequelizeDatabaseError: column "timingslotid" does not exist 
2024-01-14 05:23:19 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user_Theater.getSingleBookedSlots() column "timingslotid" does not exist Error
    at Query.run (D:\projets\projects\Backend\node_modules\sequelize\src\dialects\postgres\query.js:76:25)
    at D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:650:28
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-01-14 05:23:19 index.ts[error]: ERROR occurred in services.admin.theater.getSingleBookedSlots column "timingslotid" does not exist Error
    at Query.run (D:\projets\projects\Backend\node_modules\sequelize\src\dialects\postgres\query.js:76:25)
    at D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:650:28
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-01-14 05:23:19 index.ts[info]: helper.response_builder.responseBuilder() 
2024-01-14 05:23:56 index.ts[info]: initializeRoutes() 
2024-01-14 05:23:56 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:24:09 index.ts[info]: controller.admin.getSingleBookedSlots() 
2024-01-14 05:24:09 index.ts[debug]: controller.admin.getSingleBookedSlots() Object = {} 
2024-01-14 05:24:09 index.ts[info]: services.admin.theater.getSingleBookedSlots() ==>  
2024-01-14 05:24:09 index.ts[info]: data_stores_mysql_lib_user_Theater.getSingleBookedSlots() 
2024-01-14 05:24:19 index.ts[error]: ERROR in executeQuery() => SequelizeDatabaseError: column booking.timingslotid does not exist 
2024-01-14 05:24:19 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user_Theater.getSingleBookedSlots() column booking.timingslotid does not exist Error
    at Query.run (D:\projets\projects\Backend\node_modules\sequelize\src\dialects\postgres\query.js:76:25)
    at D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:650:28
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-01-14 05:24:19 index.ts[error]: ERROR occurred in services.admin.theater.getSingleBookedSlots column booking.timingslotid does not exist Error
    at Query.run (D:\projets\projects\Backend\node_modules\sequelize\src\dialects\postgres\query.js:76:25)
    at D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:650:28
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-01-14 05:24:19 index.ts[info]: helper.response_builder.responseBuilder() 
2024-01-14 05:25:27 index.ts[info]: initializeRoutes() 
2024-01-14 05:25:27 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:25:30 index.ts[info]: controller.admin.getSingleBookedSlots() 
2024-01-14 05:25:30 index.ts[debug]: controller.admin.getSingleBookedSlots() Object = {} 
2024-01-14 05:25:30 index.ts[info]: services.admin.theater.getSingleBookedSlots() ==>  
2024-01-14 05:25:30 index.ts[info]: data_stores_mysql_lib_user_Theater.getSingleBookedSlots() 
2024-01-14 05:25:38 index.ts[info]: helper.response_builder.responseBuilder() 
2024-01-14 05:30:26 index.ts[info]: initializeRoutes() 
2024-01-14 05:30:26 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:31:23 index.ts[info]: initializeRoutes() 
2024-01-14 05:31:23 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:32:40 index.ts[info]: initializeRoutes() 
2024-01-14 05:32:40 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:32:48 index.ts[info]: initializeRoutes() 
2024-01-14 05:32:48 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:32:56 index.ts[info]: initializeRoutes() 
2024-01-14 05:32:56 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:33:38 index.ts[info]: initializeRoutes() 
2024-01-14 05:33:38 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:34:03 index.ts[info]: initializeRoutes() 
2024-01-14 05:34:03 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:34:12 index.ts[info]: initializeRoutes() 
2024-01-14 05:34:12 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:34:25 index.ts[info]: initializeRoutes() 
2024-01-14 05:34:25 index.ts[info]: SERVER listening on PORT:5000 
2024-01-14 05:35:15 index.ts[info]: controller.admin.getBookedTIming() 
2024-01-14 05:35:15 index.ts[debug]: controller.admin.getBookedTIming() Object = {} 
2024-01-14 05:35:15 index.ts[info]: services.admin.theater.getBookedTIming() ==>  
2024-01-14 05:35:15 index.ts[info]: data_stores_mysql_lib_user_Theater.getSingleBookedSlots() 
2024-01-14 05:35:23 index.ts[info]: helper.response_builder.responseBuilder() 
2024-01-14 05:35:34 index.ts[info]: controller.admin.getSingleBookedSlots() 
2024-01-14 05:35:34 index.ts[debug]: controller.admin.getSingleBookedSlots() Object = {} 
2024-01-14 05:35:34 index.ts[info]: services.admin.theater.getSingleBookedSlots() ==>  
2024-01-14 05:35:34 index.ts[info]: data_stores_mysql_lib_user_Theater.getSingleBookedSlots() 
2024-01-14 05:35:38 index.ts[info]: helper.response_builder.responseBuilder() 
