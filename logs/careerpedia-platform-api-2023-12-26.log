2023-12-26 01:07:36 index.ts[info]: initializeRoutes() 
2023-12-26 01:07:37 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:18:15 index.ts[info]: initializeRoutes() 
2023-12-26 01:18:15 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:24:03 index.ts[info]: initializeRoutes() 
2023-12-26 01:24:03 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:27:07 index.ts[info]: initializeRoutes() 
2023-12-26 01:27:07 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:39:37 index.ts[info]: initializeRoutes() 
2023-12-26 01:39:37 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:43:13 index.ts[info]: initializeRoutes() 
2023-12-26 01:43:13 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:43:31 index.ts[info]: initializeRoutes() 
2023-12-26 01:43:31 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:44:16 index.ts[info]: initializeRoutes() 
2023-12-26 01:44:16 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:44:50 index.ts[info]: initializeRoutes() 
2023-12-26 01:44:50 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:45:37 index.ts[info]: initializeRoutes() 
2023-12-26 01:45:37 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:45:55 index.ts[info]: data_stores_mysql_lib_user.addNewAccessa() 
2023-12-26 01:45:59 index.ts[error]: ERROR in executeQuery() => SequelizeDatabaseError: relation "images" does not exist 
2023-12-26 01:45:59 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewAccessa() relation "images" does not exist Error
    at Query.run (D:\projets\projects\Backend\node_modules\sequelize\src\dialects\postgres\query.js:76:25)
    at D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:650:28
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 01:47:06 index.ts[info]: initializeRoutes() 
2023-12-26 01:47:06 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 01:47:14 index.ts[info]: data_stores_mysql_lib_user.addNewAccessa() 
2023-12-26 18:19:57 index.ts[info]: initializeRoutes() 
2023-12-26 18:19:57 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 18:20:24 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 18:20:24 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {} 
2023-12-26 18:20:24 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 18:20:24 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 18:20:30 index.ts[error]: ERROR in executeQuery() => Error: Named replacement ":user" has no entry in the replacement map. 
2023-12-26 18:20:30 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Named replacement ":user" has no entry in the replacement map. Error: Named replacement ":user" has no entry in the replacement map.
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:176:15)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 18:20:30 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 18:20:30 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 18:20:30 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:74:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 18:22:50 index.ts[info]: initializeRoutes() 
2023-12-26 18:22:50 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 18:22:51 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 18:22:51 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {} 
2023-12-26 18:22:51 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 18:22:51 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 18:22:56 index.ts[error]: ERROR in executeQuery() => Error: Named replacement ":user" has no entry in the replacement map. 
2023-12-26 18:22:56 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Named replacement ":user" has no entry in the replacement map. Error: Named replacement ":user" has no entry in the replacement map.
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:176:15)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 18:22:56 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 18:22:56 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 18:22:56 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:74:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 18:23:24 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 18:23:24 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {} 
2023-12-26 18:23:24 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 18:23:24 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 18:23:24 index.ts[error]: ERROR in executeQuery() => Error: Named replacement ":user" has no entry in the replacement map. 
2023-12-26 18:23:24 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Named replacement ":user" has no entry in the replacement map. Error: Named replacement ":user" has no entry in the replacement map.
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:176:15)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 18:23:24 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 18:23:24 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 18:23:24 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:74:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:15:59 index.ts[info]: initializeRoutes() 
2023-12-26 19:15:59 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 19:16:27 index.ts[info]: initializeRoutes() 
2023-12-26 19:16:27 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 19:16:51 index.ts[info]: initializeRoutes() 
2023-12-26 19:16:51 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 19:17:08 index.ts[info]: initializeRoutes() 
2023-12-26 19:17:08 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 19:17:31 index.ts[info]: initializeRoutes() 
2023-12-26 19:17:31 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 19:17:46 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 19:17:46 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {} 
2023-12-26 19:17:47 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 19:17:47 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 19:17:53 index.ts[error]: ERROR in executeQuery() => Error: Named replacement ":user" has no entry in the replacement map. 
2023-12-26 19:17:53 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Named replacement ":user" has no entry in the replacement map. Error: Named replacement ":user" has no entry in the replacement map.
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:176:15)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:17:53 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 19:17:53 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 19:17:53 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:18:53 index.ts[info]: initializeRoutes() 
2023-12-26 19:18:53 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 19:19:25 index.ts[info]: initializeRoutes() 
2023-12-26 19:19:25 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 19:19:40 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 19:19:40 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {} 
2023-12-26 19:19:40 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 19:19:40 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 19:19:45 index.ts[error]: ERROR in executeQuery() => Error: Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------086045028954281143930282',
    'content-length',
    '1216',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {},
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------086045028954281143930282',
    'content-length': '1216',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
} 
2023-12-26 19:19:45 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------086045028954281143930282',
    'content-length',
    '1216',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {},
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------086045028954281143930282',
    'content-length': '1216',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
} Error: Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------086045028954281143930282',
    'content-length',
    '1216',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {},
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------086045028954281143930282',
    'content-length': '1216',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}
    at escape (D:\projets\projects\Backend\node_modules\sequelize\src\sql-string.js:66:11)
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:179:34)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:19:46 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 19:19:46 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 19:19:46 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:20:03 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 19:20:03 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {"uid":"12316278361782637126378126387126837"} 
2023-12-26 19:20:03 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 19:20:03 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 19:20:03 index.ts[error]: ERROR in executeQuery() => Error: Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 156,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------812969798954586637905194',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 156,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------812969798954586637905194',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
} 
2023-12-26 19:20:03 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 156,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------812969798954586637905194',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 156,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------812969798954586637905194',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
} Error: Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 156,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------812969798954586637905194',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 156,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------812969798954586637905194',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}
    at escape (D:\projets\projects\Backend\node_modules\sequelize\src\sql-string.js:66:11)
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:179:34)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:20:04 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 19:20:04 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 19:20:04 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:21:20 index.ts[info]: initializeRoutes() 
2023-12-26 19:21:20 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 19:21:28 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 19:21:28 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {"uid":"12316278361782637126378126387126837"} 
2023-12-26 19:21:29 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 19:21:29 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 19:21:34 index.ts[error]: ERROR in executeQuery() => Error: Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------383590238905489549650203',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------383590238905489549650203',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
} 
2023-12-26 19:21:34 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------383590238905489549650203',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------383590238905489549650203',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
} Error: Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------383590238905489549650203',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------383590238905489549650203',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}
    at escape (D:\projets\projects\Backend\node_modules\sequelize\src\sql-string.js:66:11)
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:179:34)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:21:35 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 19:21:35 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 19:21:35 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:22:28 index.ts[info]: initializeRoutes() 
2023-12-26 19:22:28 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 19:22:33 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 19:22:33 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {"uid":"12316278361782637126378126387126837"} 
2023-12-26 19:22:33 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 19:22:33 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 19:22:39 index.ts[error]: ERROR in executeQuery() => Error: Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------101779271943358219949148',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------101779271943358219949148',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
} 
2023-12-26 19:22:39 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------101779271943358219949148',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------101779271943358219949148',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
} Error: Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------101779271943358219949148',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------101779271943358219949148',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}
    at escape (D:\projets\projects\Backend\node_modules\sequelize\src\sql-string.js:66:11)
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:179:34)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:22:39 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 19:22:39 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 19:22:39 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:24:51 index.ts[info]: initializeRoutes() 
2023-12-26 19:24:51 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 19:24:52 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 19:24:52 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {"uid":"12316278361782637126378126387126837"} 
2023-12-26 19:24:52 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 19:24:52 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 19:24:57 index.ts[error]: ERROR in executeQuery() => Error: Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------790161467063872147721227',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------790161467063872147721227',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
} 
2023-12-26 19:24:57 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------790161467063872147721227',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------790161467063872147721227',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
} Error: Invalid value {
  file: {
    fieldname: 'image',
    originalname: 'active.png',
    encoding: '7bit',
    mimetype: 'image/png',
    buffer: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 1e 00 00 00 1a 08 06 00 00 00 a0 a1 ec b4 00 00 00 04 73 42 49 54 08 08 08 08 7c 08 64 88 00 ... 958 more bytes>,
    size: 1008
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 110426134
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'content-type',
    'multipart/form-data; boundary=--------------------------790161467063872147721227',
    'content-length',
    '1353',
    'accept-encoding',
    'gzip, deflate, br',
    'Accept',
    '*/*',
    'User-Agent',
    'Thunder Client (https://www.thunderclient.com)',
    'Host',
    'localhost:5000',
    'Connection',
    'close'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [ServerResponse],
    [Symbol(async_id_symbol)]: 23,
    [Symbol(kHandle)]: [TCP],
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/upload',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/upload',
    path: '/upload',
    href: '/upload',
    _raw: '/upload'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Socket],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [IncomingMessage],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype],
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: [Object: null prototype] {
    uid: '12316278361782637126378126387126837'
  },
  route: Route { path: '/upload', stack: [Array], methods: [Object] },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'content-type': 'multipart/form-data; boundary=--------------------------790161467063872147721227',
    'content-length': '1353',
    'accept-encoding': 'gzip, deflate, br',
    accept: '*/*',
    'user-agent': 'Thunder Client (https://www.thunderclient.com)',
    host: 'localhost:5000',
    connection: 'close'
  },
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}
    at escape (D:\projets\projects\Backend\node_modules\sequelize\src\sql-string.js:66:11)
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:179:34)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:24:58 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 19:24:58 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 19:24:58 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 19:26:52 index.ts[info]: initializeRoutes() 
2023-12-26 19:26:52 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 20:05:48 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 20:05:48 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {"uid":"12316278361782637126378126387126837"} 
2023-12-26 20:05:48 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 20:05:48 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 20:05:53 index.ts[error]: ERROR in executeQuery() => Error: Named replacement ":buffer" has no entry in the replacement map. 
2023-12-26 20:05:53 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Named replacement ":buffer" has no entry in the replacement map. Error: Named replacement ":buffer" has no entry in the replacement map.
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:176:15)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 20:05:53 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 20:05:53 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 20:05:54 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 20:06:57 index.ts[info]: initializeRoutes() 
2023-12-26 20:06:57 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 20:07:09 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 20:07:09 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {"uid":"12316278361782637126378126387126837"} 
2023-12-26 20:07:09 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 20:07:09 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 20:07:14 index.ts[error]: ERROR in executeQuery() => Error: Named replacement ":buffer" has no entry in the replacement map. 
2023-12-26 20:07:14 index.ts[error]: ERROR occurred in data_stores_mysql_lib_user.addNewImage() Named replacement ":buffer" has no entry in the replacement map. Error: Named replacement ":buffer" has no entry in the replacement map.
    at injectReplacements (D:\projets\projects\Backend\node_modules\sequelize\src\utils\sql.ts:176:15)
    at Sequelize.query (D:\projets\projects\Backend\node_modules\sequelize\src\sequelize.js:612:13)
    at D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:11:45
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\database\helpers\sql.query.util.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 20:07:14 index.ts[error]: ERROR occurred in services.admin.extraitems.addNewImage 
2023-12-26 20:07:14 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 20:07:14 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 20:08:26 index.ts[info]: initializeRoutes() 
2023-12-26 20:08:26 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 20:08:28 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 20:08:28 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {"uid":"12316278361782637126378126387126837"} 
2023-12-26 20:08:28 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 20:08:28 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 20:08:33 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 20:08:33 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 22:50:38 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 22:50:38 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {"uid":"12316278361782637126378126387126837"} 
2023-12-26 22:50:38 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 22:50:38 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 22:50:40 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 22:50:40 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-12-26 23:11:10 index.ts[info]: initializeRoutes() 
2023-12-26 23:11:10 index.ts[info]: SERVER listening on PORT:5000 
2023-12-26 23:11:13 index.ts[info]: controller-admin-extraItems-Controller.addNewImage() 
2023-12-26 23:11:13 index.ts[debug]: controller-admin-extraItems-Controller.addNewImage() Object = {"uid":"12316278361782637126378126387126837"} 
2023-12-26 23:11:13 index.ts[info]: services.admin.extraitems.addNewImage() ==>  
2023-12-26 23:11:13 index.ts[info]: data_stores_mysql_lib_user.addNewImage() 
2023-12-26 23:11:18 index.ts[info]: helper.response_builder.responseBuilder() 
2023-12-26 23:11:19 index.ts[error]: ERROR occurred in controller-admin-extraItems-Controller.addNewImage()  Cannot set headers after they are sent to the client Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:652:11)
    at ServerResponse.header (D:\projets\projects\Backend\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (D:\projets\projects\Backend\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (D:\projets\projects\Backend\node_modules\express\lib\response.js:278:15)
    at D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:76:29
    at Generator.next (<anonymous>)
    at fulfilled (D:\projets\projects\Backend\src\controller\Admin\extraItems.ts:28:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
